version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Performing manual install of compose cli"
      - curl -L -o docker-linux-amd64.tar.gz https://github.com/docker/compose-cli/releases/download/v1.0.10/docker-linux-amd64.tar.gz
      - tar xzf docker-linux-amd64.tar.gz
      - chmod +x docker/docker
      - ls -ltr
      - docker/docker compose --help
      - which docker
      - ln -s $(which docker) /usr/local/bin/com.docker.cli
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $THIS_REGION | docker login --username AWS --password-stdin ${REPOSITORY_URI}
      - $(aws ecr get-login --region $THIS_REGION --no-include-email)
      - docker pull ${REPOSITORY_URI}/${ECR_FRONTEND}:latest || true
      - docker pull ${REPOSITORY_URI}/${ECR_BACKEND}:latest || true

  build:
    commands:
      - echo "Build started on $(date)"
      - echo 'Building the Docker image...'  
      - docker/docker compose build
      - echo "Tagging Docker image for ECR"
      - docker images
      - docker tag src_backend:latest ${ECR_BACKEND}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - docker tag src_frontend:latest ${ECR_FRONTEND}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo "Build completed on $(date)"
      - docker images
  post_build:
    commands:
      - echo 'Pushing the Docker images...'
      - docker push ${ECR_BACKEND}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - docker push ${ECR_FRONTEND}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo "build successful"